// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/co2data/new": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create co2 data by posting a list of co2 data objects.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CO2 Data"
                ],
                "summary": "Create co2 data for a location",
                "parameters": [
                    {
                        "description": "New Co2Data",
                        "name": "co2data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Co2DataPostDto"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Co2DataDto"
                            }
                        }
                    },
                    "400": {
                        "description": "Something went wrong, please refer to the error message.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/co2data/{id}/latest": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get latest co2 data by passing a location id as parameter.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CO2 Data"
                ],
                "summary": "Get latest co2 data for a location",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "LocationId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Co2DataDto"
                        }
                    },
                    "404": {
                        "description": "Something went wrong, please refer to the error message.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/co2data/{id}/search": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get co2 data by passing a location id as parameter and a time frame as query parameter. The time frame is from now minus [period] (1m, 1h, 1d).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CO2 Data"
                ],
                "summary": "Get co2 data in a time frame",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "LocationId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "example": "1m",
                        "description": "time frame",
                        "name": "period",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Co2DataDto"
                            }
                        }
                    },
                    "404": {
                        "description": "Something went wrong, please refer to the error message.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/location": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get all locations.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "Get all locations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.LocationDto"
                            }
                        }
                    },
                    "404": {
                        "description": "Something went wrong, please refer to the error message.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/location/new": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Create a new location by posting a list of location objects.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "Create a new location",
                "parameters": [
                    {
                        "description": "New Location",
                        "name": "location",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.LocationPostDto"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.LocationDto"
                            }
                        }
                    },
                    "400": {
                        "description": "Something went wrong, please refer to the error message.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/location/search": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get one or more locations by passing a location id and/or name as parameter.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "Get one or more locations with search parameters",
                "parameters": [
                    {
                        "type": "string",
                        "example": "1",
                        "description": "LocationId",
                        "name": "id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "Office",
                        "description": "Name of location",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.LocationDto"
                            }
                        }
                    },
                    "404": {
                        "description": "Something went wrong, please refer to the error message.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/location/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a location by passing the location id as parameter.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "Delete a location",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "LocationId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted successfully"
                    },
                    "404": {
                        "description": "Something went wrong, please refer to the error message.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update a location by posting a location object.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Locations"
                ],
                "summary": "Update a location",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "LocationId",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Location",
                        "name": "location",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.LocationPostDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.LocationDto"
                        }
                    },
                    "400": {
                        "description": "Something went wrong, please refer to the error message.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Something went wrong, please refer to the error message.",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Co2DataDto": {
            "type": "object",
            "properties": {
                "co2": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "location_id": {
                    "type": "integer"
                },
                "temp": {
                    "type": "number"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Co2DataPostDto": {
            "type": "object",
            "properties": {
                "co2": {
                    "type": "integer"
                },
                "location_id": {
                    "type": "integer"
                },
                "temp": {
                    "type": "number"
                }
            }
        },
        "models.LocationDto": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.LocationPostDto": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "description": "Paste in the api key",
            "type": "apiKey",
            "name": "X-API-KEY",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
